@model CRMYonetimSistemi.ViewModels.CreateSaleViewModel
@using CRMYonetimSistemi.Models

@{
    ViewData["Title"] = "Yeni Satış Kaydı";
    // JSON verisi, yeni ViewModel'den stok ve formatlanmış maliyet bilgisini de alıyor.
    var productsJson = Json.Serialize(Model.AvailableProducts.Select(p => new
    {
        p.Id,
        p.Name,
        p.Stock,
        AverageUnitCost = p.AverageUnitCostInTRY.ToString("N2")
    }));
}

<h1>@ViewData["Title"]</h1>
<hr />

<form asp-action="Create" method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="text-danger" asp-validation-for="Items"></div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group mb-3">
                <label asp-for="CustomerId" class="control-label"></label>
                <select asp-for="CustomerId" class="form-select" asp-items="@(new SelectList(Model.AvailableCustomers, "Id", "Name"))">
                    <option value="">-- Müşteri Seçin --</option>
                </select>
                <span asp-validation-for="CustomerId" class="text-danger"></span>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group mb-3">
                <label asp-for="SaleDate" class="control-label"></label>
                <input asp-for="SaleDate" class="form-control" type="date" />
                <span asp-validation-for="SaleDate" class="text-danger"></span>
            </div>
        </div>
    </div>

    <!-- Para Birimi Seçimi ve Döviz Kuru -->
    <div class="row align-items-end">
        <div class="col-md-6">
            <div class="form-group mb-3">
                <label asp-for="Currency" class="control-label"></label>
                <div class="mt-2">
                    <div class="form-check form-check-inline">
                        <input class="form-check-input currency-radio" type="radio" asp-for="Currency" value="@CurrencyType.TRY" id="currencyTry" />
                        <label class="form-check-label" for="currencyTry">TL (₺)</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input currency-radio" type="radio" asp-for="Currency" value="@CurrencyType.USD" id="currencyUsd" />
                        <label class="form-check-label" for="currencyUsd">Dolar ($)</label>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group mb-3" id="exchangeRateGroup" style="display: none;">
                <label asp-for="ExchangeRate" class="control-label"></label>
                <input asp-for="ExchangeRate" class="form-control" type="number" step="0.0001" />
                <span asp-validation-for="ExchangeRate" class="text-danger"></span>
            </div>
        </div>
    </div>

    <h4 class="mt-4">Satılan Ürünler</h4>
    <div id="saleItemsContainer">
    </div>

    <button type="button" id="addItemBtn" class="btn btn-info mt-2">Yeni Ürün Satırı Ekle</button>

    <div class="form-group mt-4 border-top pt-3">
        <input type="submit" value="Satışı Kaydet" class="btn btn-primary" />
        <a asp-action="Index" class="btn btn-secondary">İptal</a>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function () {
            const products = JSON.parse('@Html.Raw(productsJson)');
            let itemIndex = 0;

            function updateRowIndices() {
                $('#saleItemsContainer .sale-item-row').each(function(index, row) {
                    $(row).find('.product-select').attr('name', `Items[${index}].ProductId`);
                    $(row).find('.quantity-input').attr('name', `Items[${index}].Quantity`);
                    $(row).find('.unit-price-input').attr('name', `Items[${index}].UnitPrice`);
                });
                itemIndex = $('#saleItemsContainer .sale-item-row').length;
            }

            $('#addItemBtn').click(function () {
                var newRow = `
                    <div class="row sale-item-row align-items-end mb-2 p-2 border rounded">
                        <div class="col-md-5">
                            <label class="form-label small">Ürün</label>
                            <select name="Items[${itemIndex}].ProductId" class="form-select product-select" required>
                                <option value="">-- Ürün Seçin --</option>
                                ${products.map(p => `<option value="${p.id}">${p.name} (Stok: ${p.stock} Adet, Maliyet: ${p.averageUnitCost} ₺)</option>`).join('')}
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label small">Miktar (Adet)</label>
                            <input type="number" name="Items[${itemIndex}].Quantity" class="form-control quantity-input" min="1" step="1" value="1" required />
                        </div>
                        <div class="col-md-2">
                            <label class="form-label small unit-price-label">Birim Fiyat (₺)</label>
                            <input type="number" name="Items[${itemIndex}].UnitPrice" class="form-control unit-price-input" min="0.01" step="0.01" placeholder="Fiyat" required />
                        </div>
                        <div class="col-md-2">
                            <button type="button" class="btn btn-danger w-100 remove-item-btn">Kaldır</button>
                        </div>
                    </div>`;

                $('#saleItemsContainer').append(newRow);
                itemIndex++;
            });

            $('#saleItemsContainer').on('click', '.remove-item-btn', function () {
                $(this).closest('.sale-item-row').remove();
                updateRowIndices();
            });

            function toggleExchangeRateField() {
                if ($('#currencyUsd').is(':checked')) {
                    $('#exchangeRateGroup').show();
                    $('.unit-price-label').text('Birim Fiyat ($)');
                } else {
                    $('#exchangeRateGroup').hide();
                    $('#ExchangeRate').val('');
                    $('.unit-price-label').text('Birim Fiyat (₺)');
                }
            }

            toggleExchangeRateField();

            $('.currency-radio').change(function () {
                toggleExchangeRateField();
            });

            $('#addItemBtn').click();
        });
    </script>
}
